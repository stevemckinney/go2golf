// This code contains some styling for the instance of having two children navs (i.e. a grandchild menu)

.c-primary-nav {

	.c-primary-nav__list {
		display: flex;
		list-style: none;

		@include respond-to-min(get-breakpoint(large)) {
			padding-right: map-get($dimensions-map, double-spacing-unit);
		}
	
		> .cat-item {
			margin-left: map-get($dimensions-map, quarter-spacing-unit);
			margin-right: map-get($dimensions-map, quarter-spacing-unit);

			> a {
				display: inline-block;
				padding-bottom: map-get($dimensions-map, quarter-spacing-unit) /2;
			}

			&:hover,
			&:active,
			&:focus {

				> a {
					text-decoration: underline;
				}
			}
		}

		.cat-item > .children {
			display: none;
			list-style: none;
			padding-top: map-get($dimensions-map, half-spacing-unit);
			padding-bottom: map-get($dimensions-map, half-spacing-unit);
			background-color: map-get($colors-map, white);
			z-index: map-get($z-index-map, primary-nav-children);

			@include respond-to-min(get-breakpoint(large)) {
				box-shadow: map-get($visual-enhancements-map, box-shadow-primary);
			}

			&:before {
				content: '';
				position: absolute;
				top: -6px;
				left: 5px;
				border-left: 7px solid transparent;
				border-right: 7px solid transparent;
				border-bottom: 7px solid map-get($colors-map, white);
			}

			.cat-item {

				&:hover,
				&:active,
				&:focus {
					background-color: map-get($colors-map, default-text-color);
					
					> a {
						color: map-get($colors-map, white);
					}
				}
			}
		}

		@include respond-to-min(get-breakpoint(large)) {
			.cat-item:hover > .children {
				display: block;
			}		
		}

		> .cat-item > .children {
			position: absolute;
			border-radius: map-get($dimensions-map, border-radius);

			> .cat-item > a {
				display: block;
				line-height: 1;
				font-weight: map-get($typography-map, light-font-weight);
				padding: map-get($dimensions-map, quarter-spacing-unit) map-get($dimensions-map, third-spacing-unit);
			}
		}

		.cat-item .cat-item > .children {
			position: absolute;
			top: 0;
			left: 100%;
			min-width: 100%;;
			min-height: 100%;
			margin-left: -#{map-get($dimensions-map, quarter-spacing-unit) /2};
			border-radius: 0 map-get($dimensions-map, border-radius) map-get($dimensions-map, border-radius) 0;
			box-shadow: 5px 1px 9px -5px rgba(map-get($colors-map, blue-zodiac), .3);

			.cat-item > a {
				display: inline-block;
				padding-bottom: map-get($dimensions-map, quarter-spacing-unit) /2;
				margin-bottom: map-get($dimensions-map, quarter-spacing-unit) /2;
				border-bottom: map-get($visual-enhancements-map, border-primary);
				font-size: map-get($typography-map, m-font-size);
			}
		}
	
		.cat-item > a {
			font-size: map-get($typography-map, m-font-size);
			font-weight: map-get($typography-map, medium-font-weight);
			color: map-get($colors-map, white);
			text-decoration: none;
		}

		.cat-item .children .cat-item > a {
			color: map-get($colors-map, default-text-color);
		}
	}
}

.c-primary-nav--dark {
	
	.c-primary-nav__list {
		
		.cat-item > a {
			color: map-get($colors-map, default-text-color);
		}
	}
}



/**
* Responsive nav
**/

.c-primary-nav {

	@include respond-to-max(get-breakpoint(large)) {
		display: none;

		.c-primary-nav__list {

			.cat-item > .children {
				position: relative;
				display: none;
		
				&.is-active {
					display: block;
					padding-top: 0;
				}
			}
		}
	}
}

.c-primary-nav--active {

	@include respond-to-max(get-breakpoint(large)) {
		display: block;
		position: fixed;
		overflow: scroll;
		width: 100%;
		height: 100%;
		left: 0;
		top: 0;
		padding-top: map-get($dimensions-map, base-spacing-unit) *1.5;
		background-color: map-get($colors-map, white);
		z-index: map-get($z-index-map, primary-nav-active);

		.c-primary-nav__list {
			display: block;
			text-align: center;
		}

		.c-primary-nav__list .cat-item > a {
			color: map-get($colors-map, default-text-color);
			font-size: map-get($typography-map, l-font-size);
		}
	}
}

.c-primary-nav__toggle {
	display: none;
	width: 30px;
	height: 30px;
	position: relative;
	transform: rotate(0deg);
	cursor: pointer;
	transition: .5s ease-in-out;
	padding: map-get($dimensions-map, quarter-spacing-unit);
	margin-right: -#{map-get($dimensions-map, quarter-spacing-unit)};
	color: map-get($colors-map, white);

	&[data-nav-toggle="active"] {
		color: map-get($colors-map, default-text-color);
		z-index: map-get($z-index-map, primary-nav-toggle);

		> span {
			background-color: map-get($colors-map, default-text-color);
		}

		> span:nth-child(1) {
			top: 12px;
			transform: rotate(135deg);
		}
	
		> span:nth-child(2) {
			opacity: 0;
			left: -60px;
		}
		  
		> span:nth-child(3) {
			top: 12px;
			transform: rotate(-135deg);
		}
	}

	@include respond-to-max(get-breakpoint(large)) {
		display:block;
	}

	> span {
		display: block;
		position: absolute;
		height: 4px;
		width: 100%;
		background-color: map-get($colors-map, white);
		border-radius: 9px;
		opacity: 1;
		left: 0;
		transform: rotate(0deg);
		transition: .25s ease-in-out;
	}

	&.c-primary-nav__toggle--dark {

		> span {
			background-color: map-get($colors-map, default-text-color);
		}
	}

	> span:nth-child(1) {
		top: 0px;
	}

	> span:nth-child(2) {
		top: 10px;
	}
	  
	> span:nth-child(3) {
		top: 20px;
	}
}